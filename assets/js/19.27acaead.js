(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{541:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",[s._v("Spring BeanCopier经过大量测试, 通过生成字节码class的方式, 直接拷贝值, 性能可以比肩get/set方法\n但是在实际开发时, 遇到bean部分字段拷贝, 过滤null值拷贝需求")])]),s._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#_1-重写beancopyier方法"}},[s._v("1. 重写BeanCopyier方法")])]),e("li",[e("a",{attrs:{href:"#_2-测试"}},[s._v("2. 测试")])])])]),e("p"),s._v(" "),e("h2",{attrs:{id:"_1-重写beancopyier方法"}},[s._v("1. 重写BeanCopyier方法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.apache.commons.collections4.map.LRUMap;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.asm.ClassVisitor;\nimport org.springframework.asm.Label;\nimport org.springframework.asm.Type;\nimport org.springframework.cglib.core.*;\n\nimport javax.validation.constraints.NotNull;\nimport java.beans.PropertyDescriptor;\nimport java.lang.reflect.Modifier;\nimport java.security.ProtectionDomain;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * @author Error\n */\npublic abstract class MyBeanCopier {\n\n    // 生成的BeanCopier唯一值\n    private static final BeanCopierKey KEY_FACTORY = (BeanCopierKey) KeyFactory.create(BeanCopierKey.class);\n    // converter 转换接口, converter接口 Object convert(Object var1, Class var2, Object var3)  var1 传入值, var2 传入值class, var3 传入源方法名称\n    private static final Type CONVERTER = TypeUtils.parseType("org.springframework.cglib.core.Converter");\n    // 定义当前类, 注意修改类路径!!!\n    private static final Type BEAN_COPIER = TypeUtils.parseType("com.zxcsoft.MyBeanCopier");\n    // 定义生成class的 copy 方法\n    private static final Signature COPY = new Signature("copy", Type.VOID_TYPE, new Type[]{Constants.TYPE_OBJECT, Constants.TYPE_OBJECT, CONVERTER});\n    // 定义convert接口的conver方法\n    private static final Signature CONVERT = TypeUtils.parseSignature("Object convert(Object, Class, Object)");\n    // 定义Objects.nonNull()方法, 在过滤对象属性时使用本方法过滤\n    private static final MethodInfo NON_NULL = ReflectUtils.getMethodInfo(ReflectUtils.findMethod("java.util.Objects.nonNull(java.lang.Object)"));\n    // LRU缓存生成的MyBeanCopier方法\n    private static final Map<BeanCopierKey, MyBeanCopier> COPIER_CACHE = Collections.synchronizedMap(new LRUMap<>(2000, 100));\n\n    // 根据参数生成, 缓存MyBeanCopier\n    public static MyBeanCopier create(Class<?> source, Class<?> target, boolean skipNull, boolean useConverter, List<String> fields) {\n        BeanCopierKey key = (BeanCopierKey) KEY_FACTORY.newInstance(source.getName(), target.getName(), useConverter, StringUtils.join(fields, ","));\n        return COPIER_CACHE.computeIfAbsent(key, k -> {\n            Generator gen = new Generator();\n            gen.setSkipNull(skipNull);\n            gen.setSource(source);\n            gen.setTarget(target);\n            gen.setUseConverter(useConverter);\n            gen.setFields(fields);\n            return gen.create(key);\n        });\n    }\n\n    /**\n     * 拷贝树形\n     *\n     * @param from      从对象\n     * @param to        目标对象\n     * @param converter 转换器\n     */\n    public abstract void copy(Object from, Object to, Converter converter);\n\n    /**\n     * key对象\n     */\n    interface BeanCopierKey {\n        Object newInstance(String source, String target, boolean useConverter, String fields);\n    }\n\n    /**\n     * 转换\n     */\n    public static class Generator extends AbstractClassGenerator<Object> {\n        private static final Source SOURCE = new Source(MyBeanCopier.class.getName());\n        private Class<?> source;\n        private Class<?> target;\n        private boolean useConverter;\n\n        /**\n        * 添加的需要转换的字段\n        */\n        private List<String> fields;\n        /**\n        * 是否需要跳过数据为null的字段\n        */\n        private boolean skipNull;\n\n        public Generator() {\n            super(SOURCE);\n        }\n\n        private static boolean compatible(PropertyDescriptor getter, PropertyDescriptor setter) {\n            return setter.getPropertyType().isAssignableFrom(getter.getPropertyType());\n        }\n\n        public void setSource(Class<?> source) {\n            if (!Modifier.isPublic(source.getModifiers())) {\n                setNamePrefix(source.getName());\n            }\n            this.source = source;\n        }\n\n        public void setTarget(Class<?> target) {\n            if (!Modifier.isPublic(target.getModifiers())) {\n                setNamePrefix(target.getName());\n            }\n            this.target = target;\n        }\n\n        public void setUseConverter(boolean useConverter) {\n            this.useConverter = useConverter;\n        }\n\n        public void setFields(List<String> fields) {\n            this.fields = fields;\n        }\n\n        public void setSkipNull(boolean skipNull) {\n            this.skipNull = skipNull;\n        }\n\n        @Override\n        protected ClassLoader getDefaultClassLoader() {\n            return source.getClassLoader();\n        }\n\n        @Override\n        protected ProtectionDomain getProtectionDomain() {\n            return ReflectUtils.getProtectionDomain(source);\n        }\n\n        public LattoBeanCopier create(BeanCopierKey key) {\n            return (LattoBeanCopier) super.create(key);\n        }\n\n        @Override\n        public void generateClass(ClassVisitor v) {\n            Type sourceType = Type.getType(source);\n            Type targetType = Type.getType(target);\n            ClassEmitter ce = new ClassEmitter(v);\n            ce.begin_class(Constants.V1_8,\n                    Constants.ACC_PUBLIC,\n                    getClassName(),\n                    BEAN_COPIER,\n                    null,\n                    Constants.SOURCE_FILE);\n\n            EmitUtils.null_constructor(ce);\n            CodeEmitter e = ce.begin_method(Constants.ACC_PUBLIC, COPY, null);\n            PropertyDescriptor[] getters = ReflectUtils.getBeanGetters(source);\n            PropertyDescriptor[] setters = ReflectUtils.getBeanSetters(target);\n\n            Map<String, PropertyDescriptor> names = new HashMap<>(16);\n            for (PropertyDescriptor propertyDescriptor : getters) {\n                names.put(propertyDescriptor.getName(), propertyDescriptor);\n            }\n            Local targetLocal = e.make_local();\n            Local sourceLocal = e.make_local();\n            if (useConverter) {\n                e.load_arg(1);\n                e.checkcast(targetType);\n                e.store_local(targetLocal);\n                e.load_arg(0);\n                e.checkcast(sourceType);\n                e.store_local(sourceLocal);\n            } else {\n                e.load_arg(1);\n                e.checkcast(targetType);\n                e.load_arg(0);\n                e.checkcast(sourceType);\n            }\n            for (PropertyDescriptor setter : setters) {\n                // 这里过滤字段\n                if (CollectionUtils.isNotEmpty(fields) && !fields.contains(setter.getName())) {\n                    continue;\n                }\n                PropertyDescriptor getter = names.get(setter.getName());\n                if (getter != null) {\n                    MethodInfo read = ReflectUtils.getMethodInfo(getter.getReadMethod());\n                    MethodInfo write = ReflectUtils.getMethodInfo(setter.getWriteMethod());\n                    // 使用convert时, convert自己实现跳过null\n                    if (useConverter) {\n                        Type setterType = write.getSignature().getArgumentTypes()[0];\n                        e.load_local(targetLocal);\n                        e.load_arg(2);\n                        e.load_local(sourceLocal);\n                        e.invoke(read);\n                        e.box(read.getSignature().getReturnType());\n                        EmitUtils.load_class(e, setterType);\n                        e.push(write.getSignature().getName());\n                        e.invoke_interface(CONVERTER, CONVERT);\n                        e.unbox_or_zero(setterType);\n                        e.invoke(write);\n                    } else if (compatible(getter, setter)) {\n                        // 是否需要跳过null\n                        if (skipNull) {\n                            // 添加结束标记\n                            Label end = e.make_label();\n                            // 加载堆栈参数2个参数\n                            e.dup2();\n                            // 执行读取,结果压入堆栈\n                            e.invoke(read);\n                            // 堆栈数据执行Objects.nonNull(), 结果压入堆栈\n                            e.invoke(NON_NULL);\n                            // 判断是否为true, false, false则跳转到end标记\n                            e.if_jump(Constants.IFEQ, end);\n                            // 读取数据压入堆栈\n                            e.invoke(read);\n                            // 读取堆栈数据\n                            e.invoke(write);\n                            // 标记当前为结束\n                            e.mark(end);\n                        } else {\n                            e.dup2();\n                            e.invoke(read);\n                            e.invoke(write);\n                        }\n                    }\n                }\n            }\n            e.return_value();\n            e.end_method();\n            ce.end_class();\n        }\n\n        @Override\n        protected Object firstInstance(Class type) {\n            return ReflectUtils.newInstance(type);\n        }\n\n        @Override\n        protected Object nextInstance(Object instance) {\n            return instance;\n        }\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br")])]),e("h2",{attrs:{id:"_2-测试"}},[s._v("2. 测试")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Data\nclass A {\n    private String name;\n    private Integer age;\n}\n\n@Data\nclass B {\n    private String name;\n    private Integer age;\n    private String six;\n}\n\nvoid main(){\n    A a = new A();\n    a.setName("name");\n    a.setAge(18);\n    B b = new B();\n    MyBeanCopier copier = MyBeanCopier.create(A.class, B.class, true, false, null);\n    copier.copy(a, b, null);\n}\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);